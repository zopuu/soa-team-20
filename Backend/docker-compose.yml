version: "3.9"

services:
    auth:
        build:
            context: ./services/auth/AuthService
            dockerfile: Dockerfile
        container_name: "authService"
        image: authservice:latest
        ports:
            - "5000:8080"
        environment:
            ASPNETCORE_ENVIRONMENT: Development
            ConnectionStrings__DefaultConnection: "Host=auth-db;Port=5432;Database=auth;Username=postgres;Password=password"
        depends_on:
            - auth-db

    auth-db:
        image: postgres:15
        container_name: "authDatabase"
        environment:
            POSTGRES_DB: auth
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        ports:
            - "55432:5432"
        volumes:
            - auth_data:/var/lib/postgresql/data

    # Go stakeholders service (no new DB)
    stakeholders:
        build:
            context: ./services/stakeholders
            dockerfile: Dockerfile
        image: stakeholders:latest
        container_name: "stakeholdersService"
        ports:
            - "5001:8080" # host 5001 -> container 8080
        environment:
            USER_DB_HOST: auth-db
            USER_DB_USER: postgres
            USER_DB_PASS: password
            USER_DB_NAME: auth
            USER_DB_PORT: "5432"
            USER_SERVICE_PORT:
                "8080"
                # JWT verification
            Jwt__Key: "aiugbherajndfuieajdvnaiuerkjdfnaeui" # must match Auth
            Jwt__Issuer: "AuthService"
            Jwt__Audience: "AuthServiceClient"
        depends_on:
            - auth
            - auth-db

    blogservice:
        build:
            context: ./services/blog
            dockerfile: Dockerfile
        container_name: blogservice
        image: blogservice
        ports:
            - "5100:8080"
        environment:
            - MONGO_URI=mongodb://blogmongodb:27017
        depends_on:
            - blogmongodb

    blogmongodb:
        image: mongo:6
        container_name: blogmongodb
        restart: always
        ports:
            - "27017:27017"
        volumes:
            - blog-data:/data/db

    tourservice:
        build:
            context: ./services/tour
            dockerfile: Dockerfile
        container_name: tourservice
        image: tourservice
        ports:
            - "5200:8080"
        environment:
            - MONGO_URI=mongodb://tourmongodb:27017
        depends_on:
            - tourmongodb

    tourmongodb:
        image: mongo:6
        container_name: tourmongodb
        restart: always
        ports:
            - "27018:27017"
        volumes:
            - tour-data:/data/db

volumes:
    auth_data:
    blog-data:
    tour-data:
